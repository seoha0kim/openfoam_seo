/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  5                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices #codeStream
{
    codeInclude
    #{
        #include "pointField.H"
    #};

    code
    #{
        pointField points(110);
        points[0] = point(-1.500000, -1.500000, -0.500000);
        points[1] = point(-0.308750, -1.500000, -0.500000);
        points[2] = point(-0.154375, -1.500000, -0.500000);
        points[3] = point(-0.145672, -1.500000, -0.500000);
        points[4] = point(-0.135061, -1.500000, -0.500000);
        points[5] = point(-0.131804, -1.500000, -0.500000);
        points[6] = point(-0.106312, -1.500000, -0.500000);
        points[7] = point(-0.085993, -1.500000, -0.500000);
        points[8] = point(-0.084825, -1.500000, -0.500000);
        points[9] = point(0.000000, -1.500000, -0.500000);
        points[10] = point(0.084825, -1.500000, -0.500000);
        points[11] = point(0.085993, -1.500000, -0.500000);
        points[12] = point(0.106312, -1.500000, -0.500000);
        points[13] = point(0.131804, -1.500000, -0.500000);
        points[14] = point(0.135061, -1.500000, -0.500000);
        points[15] = point(0.145672, -1.500000, -0.500000);
        points[16] = point(0.154375, -1.500000, -0.500000);
        points[17] = point(0.617500, -1.500000, -0.500000);
        points[18] = point(4.500000, -1.500000, -0.500000);
        points[19] = point(-1.500000, -0.200000, -0.500000);
        points[20] = point(-0.286153, -0.231178, -0.500000);
        points[21] = point(-0.132624, -0.215041, -0.500000);
        points[22] = point(-0.123968, -0.214131, -0.500000);
        points[23] = point(-0.113416, -0.213022, -0.500000);
        points[24] = point(-0.110176, -0.212682, -0.500000);
        points[25] = point(-0.084824, -0.210017, -0.500000);
        points[26] = point(-0.064616, -0.207893, -0.500000);
        points[27] = point(-0.063455, -0.207771, -0.500000);
        points[28] = point(0.020906, -0.198904, -0.500000);
        points[29] = point(0.105266, -0.190038, -0.500000);
        points[30] = point(0.106427, -0.189916, -0.500000);
        points[31] = point(0.126635, -0.187792, -0.500000);
        points[32] = point(0.151988, -0.185127, -0.500000);
        points[33] = point(0.155227, -0.184787, -0.500000);
        points[34] = point(0.165779, -0.183678, -0.500000);
        points[35] = point(0.174435, -0.182768, -0.500000);
        points[36] = point(0.635023, -0.134358, -0.500000);
        points[37] = point(4.500000, -0.200000, -0.500000);
        points[38] = point(-1.500000, -0.019386, -0.500000);
        points[39] = point(-0.305032, -0.051553, -0.500000);
        points[40] = point(-0.151503, -0.035416, -0.500000);
        points[41] = point(-0.142847, -0.034506, -0.500000);
        points[42] = point(-0.132295, -0.033397, -0.500000);
        points[43] = point(-0.129056, -0.033057, -0.500000);
        points[44] = point(-0.103703, -0.030392, -0.500000);
        points[45] = point(-0.083495, -0.028268, -0.500000);
        points[46] = point(-0.082270, -0.028757, -0.500000);
        points[47] = point(0.002091, -0.019890, -0.500000);
        points[48] = point(0.086451, -0.011024, -0.500000);
        points[49] = point(0.087548, -0.010291, -0.500000);
        points[50] = point(0.107756, -0.008167, -0.500000);
        points[51] = point(0.133108, -0.005502, -0.500000);
        points[52] = point(0.136348, -0.005162, -0.500000);
        points[53] = point(0.146900, -0.004053, -0.500000);
        points[54] = point(0.155556, -0.003143, -0.500000);
        points[55] = point(0.616144, 0.045267, -0.500000);
        points[56] = point(4.500000, -0.019386, -0.500000);
        points[57] = point(-1.500000, -0.013326, -0.500000);
        points[58] = point(-0.305666, -0.045526, -0.500000);
        points[59] = point(-0.152136, -0.029390, -0.500000);
        points[60] = point(-0.143481, -0.028480, -0.500000);
        points[61] = point(-0.132928, -0.027371, -0.500000);
        points[62] = point(-0.129689, -0.027030, -0.500000);
        points[63] = point(-0.104337, -0.024366, -0.500000);
        points[64] = point(-0.080887, -0.021901, -0.500000);
        points[65] = point(0.083673, -0.004605, -0.500000);
        points[66] = point(0.107123, -0.002140, -0.500000);
        points[67] = point(0.132475, 0.000524, -0.500000);
        points[68] = point(0.135714, 0.000865, -0.500000);
        points[69] = point(0.146267, 0.001974, -0.500000);
        points[70] = point(0.154922, 0.002884, -0.500000);
        points[71] = point(0.615510, 0.051293, -0.500000);
        points[72] = point(4.500000, -0.013326, -0.500000);
        points[73] = point(-1.500000, 0.012391, -0.500000);
        points[74] = point(-0.308354, -0.019950, -0.500000);
        points[75] = point(-0.154824, -0.003814, -0.500000);
        points[76] = point(-0.146191, -0.002688, -0.500000);
        points[77] = point(-0.135042, -0.007255, -0.500000);
        points[78] = point(-0.132436, -0.000893, -0.500000);
        points[79] = point(-0.107151, 0.002405, -0.500000);
        points[80] = point(-0.088376, 0.000444, -0.500000);
        points[81] = point(0.086352, 0.018808, -0.500000);
        points[82] = point(0.104309, 0.024630, -0.500000);
        points[83] = point(0.129728, 0.026661, -0.500000);
        points[84] = point(0.133600, 0.020980, -0.500000);
        points[85] = point(0.143556, 0.027766, -0.500000);
        points[86] = point(0.152234, 0.028459, -0.500000);
        points[87] = point(0.612822, 0.076869, -0.500000);
        points[88] = point(4.500000, 0.012391, -0.500000);
        points[89] = point(-1.500000, 0.016141, -0.500000);
        points[90] = point(-0.308746, -0.016221, -0.500000);
        points[91] = point(-0.155216, -0.000084, -0.500000);
        points[92] = point(-0.002091, 0.019890, -0.500000);
        points[93] = point(0.151842, 0.032189, -0.500000);
        points[94] = point(0.612430, 0.080599, -0.500000);
        points[95] = point(4.500000, 0.016141, -0.500000);
        points[96] = point(-1.500000, 0.200000, -0.500000);
        points[97] = point(-0.327964, 0.166631, -0.500000);
        points[98] = point(-0.174435, 0.182768, -0.500000);
        points[99] = point(-0.020906, 0.198904, -0.500000);
        points[100] = point(0.132624, 0.215041, -0.500000);
        points[101] = point(0.593212, 0.263451, -0.500000);
        points[102] = point(4.500000, 0.200000, -0.500000);
        points[103] = point(-1.500000, 1.500000, -0.500000);
        points[104] = point(-0.308750, 1.500000, -0.500000);
        points[105] = point(-0.154375, 1.500000, -0.500000);
        points[106] = point(0.000000, 1.500000, -0.500000);
        points[107] = point(0.154375, 1.500000, -0.500000);
        points[108] = point(0.617500, 1.500000, -0.500000);
        points[109] = point(4.500000, 1.500000, -0.500000);

        // Duplicate z points
        label sz = points.size();
        points.setSize(2*sz);
        for (label i = 0; i < sz; i++)
        {
            const point& pt = points[i];
            points[i+sz] = point(pt.x(), pt.y(), -pt.z());
        }

        os << points;
    #};
};

blocks
(
    hex (000 001 020 019 110 111 130 129) (041 042 1) edgeGrading (2.1e-02 2.1e-02 2.1e-02 2.1e-02 2.0e-02 2.0e-02 2.0e-02 2.0e-02 1 1 1 1)
    hex (001 002 021 020 111 112 131 130) (066 042 1) edgeGrading (1.0e+00 1.0e+00 1.0e+00 1.0e+00 2.0e-02 2.0e-02 2.0e-02 2.0e-02 1 1 1 1)
    hex (002 003 022 021 112 113 132 131) (003 042 1) edgeGrading (1.0e+00 1.0e+00 1.0e+00 1.0e+00 2.0e-02 2.0e-02 2.0e-02 2.0e-02 1 1 1 1)
    hex (003 004 023 022 113 114 133 132) (004 042 1) edgeGrading (1.0e+00 1.0e+00 1.0e+00 1.0e+00 2.0e-02 2.0e-02 2.0e-02 2.0e-02 1 1 1 1)
    hex (004 005 024 023 114 115 134 133) (001 042 1) edgeGrading (1.0e+00 1.0e+00 1.0e+00 1.0e+00 2.0e-02 2.0e-02 2.0e-02 2.0e-02 1 1 1 1)
    hex (005 006 025 024 115 116 135 134) (010 042 1) edgeGrading (1.0e+00 1.0e+00 1.0e+00 1.0e+00 2.0e-02 2.0e-02 2.0e-02 2.0e-02 1 1 1 1)
    hex (006 007 026 025 116 117 136 135) (008 042 1) edgeGrading (1.0e+00 1.0e+00 1.0e+00 1.0e+00 2.0e-02 2.0e-02 2.0e-02 2.0e-02 1 1 1 1)
    hex (007 008 027 026 117 118 137 136) (001 042 1) edgeGrading (1.0e+00 1.0e+00 1.0e+00 1.0e+00 2.0e-02 2.0e-02 2.0e-02 2.0e-02 1 1 1 1)
    hex (008 009 028 027 118 119 138 137) (036 042 1) edgeGrading (1.0e+00 1.0e+00 1.0e+00 1.0e+00 2.0e-02 2.0e-02 2.0e-02 2.0e-02 1 1 1 1)
    hex (009 010 029 028 119 120 139 138) (036 042 1) edgeGrading (1.0e+00 1.0e+00 1.0e+00 1.0e+00 2.0e-02 2.0e-02 2.0e-02 2.0e-02 1 1 1 1)
    hex (010 011 030 029 120 121 140 139) (001 042 1) edgeGrading (1.0e+00 1.0e+00 1.0e+00 1.0e+00 2.0e-02 2.0e-02 2.0e-02 2.0e-02 1 1 1 1)
    hex (011 012 031 030 121 122 141 140) (008 042 1) edgeGrading (1.0e+00 1.0e+00 1.0e+00 1.0e+00 2.0e-02 1.9e-02 1.9e-02 2.0e-02 1 1 1 1)
    hex (012 013 032 031 122 123 142 141) (010 042 1) edgeGrading (1.0e+00 1.0e+00 1.0e+00 1.0e+00 1.9e-02 1.9e-02 1.9e-02 1.9e-02 1 1 1 1)
    hex (013 014 033 032 123 124 143 142) (001 042 1) edgeGrading (1.0e+00 1.0e+00 1.0e+00 1.0e+00 1.9e-02 1.9e-02 1.9e-02 1.9e-02 1 1 1 1)
    hex (014 015 034 033 124 125 144 143) (004 042 1) edgeGrading (1.0e+00 1.0e+00 1.0e+00 1.0e+00 1.9e-02 1.9e-02 1.9e-02 1.9e-02 1 1 1 1)
    hex (015 016 035 034 125 126 145 144) (003 042 1) edgeGrading (1.0e+00 1.0e+00 1.0e+00 1.0e+00 1.9e-02 1.9e-02 1.9e-02 1.9e-02 1 1 1 1)
    hex (016 017 036 035 126 127 146 145) (198 042 1) edgeGrading (1.0e+00 1.0e+00 1.0e+00 1.0e+00 1.9e-02 1.8e-02 1.8e-02 1.9e-02 1 1 1 1)
    hex (017 018 037 036 127 128 147 146) (053 042 1) edgeGrading (1.5e+02 1.5e+02 1.5e+02 1.5e+02 1.8e-02 2.0e-02 2.0e-02 1.8e-02 1 1 1 1)
    hex (019 020 039 038 129 130 149 148) (041 077 1) edgeGrading (2.1e-02 2.1e-02 2.1e-02 2.1e-02 1.0e+00 1.0e+00 1.0e+00 1.0e+00 1 1 1 1)
    hex (020 021 040 039 130 131 150 149) (066 077 1) simpleGrading (1 1 1)
    hex (021 022 041 040 131 132 151 150) (003 077 1) simpleGrading (1 1 1)
    hex (022 023 042 041 132 133 152 151) (004 077 1) simpleGrading (1 1 1)
    hex (023 024 043 042 133 134 153 152) (001 077 1) simpleGrading (1 1 1)
    hex (024 025 044 043 134 135 154 153) (010 077 1) simpleGrading (1 1 1)
    hex (025 026 045 044 135 136 155 154) (008 077 1) simpleGrading (1 1 1)
    hex (026 027 046 045 136 137 156 155) (001 077 1) simpleGrading (1 1 1)
    hex (027 028 047 046 137 138 157 156) (036 077 1) simpleGrading (1 1 1)
    hex (028 029 048 047 138 139 158 157) (036 077 1) simpleGrading (1 1 1)
    hex (029 030 049 048 139 140 159 158) (001 077 1) simpleGrading (1 1 1)
    hex (030 031 050 049 140 141 160 159) (008 077 1) simpleGrading (1 1 1)
    hex (031 032 051 050 141 142 161 160) (010 077 1) simpleGrading (1 1 1)
    hex (032 033 052 051 142 143 162 161) (001 077 1) simpleGrading (1 1 1)
    hex (033 034 053 052 143 144 163 162) (004 077 1) simpleGrading (1 1 1)
    hex (034 035 054 053 144 145 164 163) (003 077 1) simpleGrading (1 1 1)
    hex (035 036 055 054 145 146 165 164) (198 077 1) simpleGrading (1 1 1)
    hex (036 037 056 055 146 147 166 165) (053 077 1) edgeGrading (1.5e+02 1.5e+02 1.5e+02 1.5e+02 1.0e+00 1.0e+00 1.0e+00 1.0e+00 1 1 1 1)
    hex (038 039 058 057 148 149 168 167) (041 002 1) edgeGrading (2.1e-02 2.1e-02 2.1e-02 2.1e-02 1.0e+00 1.0e+00 1.0e+00 1.0e+00 1 1 1 1)
    hex (039 040 059 058 149 150 169 168) (066 002 1) simpleGrading (1 1 1)
    hex (040 041 060 059 150 151 170 169) (003 002 1) simpleGrading (1 1 1)
    hex (041 042 061 060 151 152 171 170) (004 002 1) simpleGrading (1 1 1)
    hex (042 043 062 061 152 153 172 171) (001 002 1) simpleGrading (1 1 1)
    hex (043 044 063 062 153 154 173 172) (010 002 1) simpleGrading (1 1 1)
    hex (044 045 064 063 154 155 174 173) (008 002 1) simpleGrading (1 1 1)
    hex (049 050 066 065 159 160 176 175) (008 002 1) simpleGrading (1 1 1)
    hex (050 051 067 066 160 161 177 176) (010 002 1) simpleGrading (1 1 1)
    hex (051 052 068 067 161 162 178 177) (001 002 1) simpleGrading (1 1 1)
    hex (052 053 069 068 162 163 179 178) (004 002 1) simpleGrading (1 1 1)
    hex (053 054 070 069 163 164 180 179) (003 002 1) simpleGrading (1 1 1)
    hex (054 055 071 070 164 165 181 180) (198 002 1) simpleGrading (1 1 1)
    hex (055 056 072 071 165 166 182 181) (053 002 1) edgeGrading (1.5e+02 1.5e+02 1.5e+02 1.5e+02 1.0e+00 1.0e+00 1.0e+00 1.0e+00 1 1 1 1)
    hex (057 058 074 073 167 168 184 183) (041 011 1) edgeGrading (2.1e-02 2.1e-02 2.1e-02 2.1e-02 1.0e+00 1.0e+00 1.0e+00 1.0e+00 1 1 1 1)
    hex (058 059 075 074 168 169 185 184) (066 011 1) simpleGrading (1 1 1)
    hex (059 060 076 075 169 170 186 185) (003 011 1) simpleGrading (1 1 1)
    hex (060 061 077 076 170 171 187 186) (004 011 1) simpleGrading (1 1 1)
    hex (061 062 078 077 171 172 188 187) (001 011 1) simpleGrading (1 1 1)
    hex (062 063 079 078 172 173 189 188) (010 011 1) simpleGrading (1 1 1)
    hex (063 064 080 079 173 174 190 189) (008 011 1) simpleGrading (1 1 1)
    hex (065 066 082 081 175 176 192 191) (008 011 1) simpleGrading (1 1 1)
    hex (066 067 083 082 176 177 193 192) (010 011 1) simpleGrading (1 1 1)
    hex (067 068 084 083 177 178 194 193) (001 011 1) simpleGrading (1 1 1)
    hex (068 069 085 084 178 179 195 194) (004 011 1) simpleGrading (1 1 1)
    hex (069 070 086 085 179 180 196 195) (003 011 1) simpleGrading (1 1 1)
    hex (070 071 087 086 180 181 197 196) (198 011 1) simpleGrading (1 1 1)
    hex (071 072 088 087 181 182 198 197) (053 011 1) edgeGrading (1.5e+02 1.5e+02 1.5e+02 1.5e+02 1.0e+00 1.0e+00 1.0e+00 1.0e+00 1 1 1 1)
    hex (073 074 090 089 183 184 200 199) (041 001 1) edgeGrading (2.1e-02 2.1e-02 2.1e-02 2.1e-02 1.0e+00 1.0e+00 1.0e+00 1.0e+00 1 1 1 1)
    hex (074 075 091 090 184 185 201 200) (066 001 1) simpleGrading (1 1 1)
    hex (086 087 094 093 196 197 204 203) (198 001 1) simpleGrading (1 1 1)
    hex (087 088 095 094 197 198 205 204) (053 001 1) edgeGrading (1.5e+02 1.5e+02 1.5e+02 1.5e+02 1.0e+00 1.0e+00 1.0e+00 1.0e+00 1 1 1 1)
    hex (089 090 097 096 199 200 207 206) (041 078 1) edgeGrading (2.1e-02 2.2e-02 2.2e-02 2.1e-02 1.0e+00 1.0e+00 1.0e+00 1.0e+00 1 1 1 1)
    hex (090 091 098 097 200 201 208 207) (066 078 1) simpleGrading (1 1 1)
    hex (091 092 099 098 201 202 209 208) (066 078 1) simpleGrading (1 1 1)
    hex (092 093 100 099 202 203 210 209) (066 078 1) simpleGrading (1 1 1)
    hex (093 094 101 100 203 204 211 210) (198 078 1) simpleGrading (1 1 1)
    hex (094 095 102 101 204 205 212 211) (053 078 1) edgeGrading (1.5e+02 1.5e+02 1.5e+02 1.5e+02 1.0e+00 1.0e+00 1.0e+00 1.0e+00 1 1 1 1)
    hex (096 097 104 103 206 207 214 213) (041 042 1) edgeGrading (2.2e-02 2.1e-02 2.1e-02 2.2e-02 5.2e+01 5.3e+01 5.3e+01 5.2e+01 1 1 1 1)
    hex (097 098 105 104 207 208 215 214) (066 042 1) edgeGrading (1.0e+00 1.0e+00 1.0e+00 1.0e+00 5.3e+01 5.2e+01 5.2e+01 5.3e+01 1 1 1 1)
    hex (098 099 106 105 208 209 216 215) (066 042 1) edgeGrading (1.0e+00 1.0e+00 1.0e+00 1.0e+00 5.2e+01 5.2e+01 5.2e+01 5.2e+01 1 1 1 1)
    hex (099 100 107 106 209 210 217 216) (066 042 1) edgeGrading (1.0e+00 1.0e+00 1.0e+00 1.0e+00 5.2e+01 5.1e+01 5.1e+01 5.2e+01 1 1 1 1)
    hex (100 101 108 107 210 211 218 217) (198 042 1) edgeGrading (1.0e+00 1.0e+00 1.0e+00 1.0e+00 5.1e+01 4.8e+01 4.8e+01 5.1e+01 1 1 1 1)
    hex (101 102 109 108 211 212 219 218) (053 042 1) edgeGrading (1.5e+02 1.5e+02 1.5e+02 1.5e+02 4.8e+01 5.2e+01 5.2e+01 4.8e+01 1 1 1 1)
);

edges
(
);

boundary
(
    top
    {
        type symmetryPlane;
        faces
        (
            (213 214 104 103)
            (214 215 105 104)
            (215 216 106 105)
            (216 217 107 106)
            (217 218 108 107)
            (218 219 109 108)
        );
    }
    bottom
    {
        type symmetryPlane;
        faces
        (
            (0 1 111 110)
            (1 2 112 111)
            (2 3 113 112)
            (3 4 114 113)
            (4 5 115 114)
            (5 6 116 115)
            (6 7 117 116)
            (7 8 118 117)
            (8 9 119 118)
            (9 10 120 119)
            (10 11 121 120)
            (11 12 122 121)
            (12 13 123 122)
            (13 14 124 123)
            (14 15 125 124)
            (15 16 126 125)
            (16 17 127 126)
            (17 18 128 127)
        );
    }
    inlet
    {
        type patch;
        faces
        (
            (110 129 19 0)
            (129 148 38 19)
            (148 167 57 38)
            (167 183 73 57)
            (183 199 89 73)
            (199 206 96 89)
            (206 213 103 96)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (18 37 147 128)
            (37 56 166 147)
            (56 72 182 166)
            (72 88 198 182)
            (88 95 205 198)
            (95 102 212 205)
            (102 109 219 212)
        );
    }
    deck
    {
        type wall;
        faces
        (
            (75 76 186 185)
            (76 77 187 186)
            (77 78 188 187)
            (78 79 189 188)
            (79 80 190 189)
            (80 64 174 190)
            (64 45 155 174)
            (45 46 156 155)
            (46 47 157 156)
            (47 48 158 157)
            (48 49 159 158)
            (49 65 175 159)
            (65 81 191 175)
            (81 82 192 191)
            (82 83 193 192)
            (83 84 194 193)
            (84 85 195 194)
            (85 86 196 195)
            (86 93 203 196)
            (93 92 202 203)
            (92 91 201 202)
            (91 75 185 201)
        );
    }
    frontAndBack
    {
        type empty;
        faces
        (
            (19 20 1 0)
            (20 21 2 1)
            (21 22 3 2)
            (22 23 4 3)
            (23 24 5 4)
            (24 25 6 5)
            (25 26 7 6)
            (26 27 8 7)
            (27 28 9 8)
            (28 29 10 9)
            (29 30 11 10)
            (30 31 12 11)
            (31 32 13 12)
            (32 33 14 13)
            (33 34 15 14)
            (34 35 16 15)
            (35 36 17 16)
            (36 37 18 17)
            (38 39 20 19)
            (39 40 21 20)
            (40 41 22 21)
            (41 42 23 22)
            (42 43 24 23)
            (43 44 25 24)
            (44 45 26 25)
            (45 46 27 26)
            (46 47 28 27)
            (47 48 29 28)
            (48 49 30 29)
            (49 50 31 30)
            (50 51 32 31)
            (51 52 33 32)
            (52 53 34 33)
            (53 54 35 34)
            (54 55 36 35)
            (55 56 37 36)
            (57 58 39 38)
            (58 59 40 39)
            (59 60 41 40)
            (60 61 42 41)
            (61 62 43 42)
            (62 63 44 43)
            (63 64 45 44)
            (65 66 50 49)
            (66 67 51 50)
            (67 68 52 51)
            (68 69 53 52)
            (69 70 54 53)
            (70 71 55 54)
            (71 72 56 55)
            (73 74 58 57)
            (74 75 59 58)
            (75 76 60 59)
            (76 77 61 60)
            (77 78 62 61)
            (78 79 63 62)
            (79 80 64 63)
            (81 82 66 65)
            (82 83 67 66)
            (83 84 68 67)
            (84 85 69 68)
            (85 86 70 69)
            (86 87 71 70)
            (87 88 72 71)
            (89 90 74 73)
            (90 91 75 74)
            (93 94 87 86)
            (94 95 88 87)
            (96 97 90 89)
            (97 98 91 90)
            (98 99 92 91)
            (99 100 93 92)
            (100 101 94 93)
            (101 102 95 94)
            (103 104 97 96)
            (104 105 98 97)
            (105 106 99 98)
            (106 107 100 99)
            (107 108 101 100)
            (108 109 102 101)
            (110 111 130 129)
            (111 112 131 130)
            (112 113 132 131)
            (113 114 133 132)
            (114 115 134 133)
            (115 116 135 134)
            (116 117 136 135)
            (117 118 137 136)
            (118 119 138 137)
            (119 120 139 138)
            (120 121 140 139)
            (121 122 141 140)
            (122 123 142 141)
            (123 124 143 142)
            (124 125 144 143)
            (125 126 145 144)
            (126 127 146 145)
            (127 128 147 146)
            (129 130 149 148)
            (130 131 150 149)
            (131 132 151 150)
            (132 133 152 151)
            (133 134 153 152)
            (134 135 154 153)
            (135 136 155 154)
            (136 137 156 155)
            (137 138 157 156)
            (138 139 158 157)
            (139 140 159 158)
            (140 141 160 159)
            (141 142 161 160)
            (142 143 162 161)
            (143 144 163 162)
            (144 145 164 163)
            (145 146 165 164)
            (146 147 166 165)
            (148 149 168 167)
            (149 150 169 168)
            (150 151 170 169)
            (151 152 171 170)
            (152 153 172 171)
            (153 154 173 172)
            (154 155 174 173)
            (159 160 176 175)
            (160 161 177 176)
            (161 162 178 177)
            (162 163 179 178)
            (163 164 180 179)
            (164 165 181 180)
            (165 166 182 181)
            (167 168 184 183)
            (168 169 185 184)
            (169 170 186 185)
            (170 171 187 186)
            (171 172 188 187)
            (172 173 189 188)
            (173 174 190 189)
            (175 176 192 191)
            (176 177 193 192)
            (177 178 194 193)
            (178 179 195 194)
            (179 180 196 195)
            (180 181 197 196)
            (181 182 198 197)
            (183 184 200 199)
            (184 185 201 200)
            (196 197 204 203)
            (197 198 205 204)
            (199 200 207 206)
            (200 201 208 207)
            (201 202 209 208)
            (202 203 210 209)
            (203 204 211 210)
            (204 205 212 211)
            (206 207 214 213)
            (207 208 215 214)
            (208 209 216 215)
            (209 210 217 216)
            (210 211 218 217)
            (211 212 219 218)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
